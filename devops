First Task -------

gcloud config set compute/zone us-east1-b

git clone https://source.developers.google.com/p/$DEVSHELL_PROJECT_ID/r/sample-app

gcloud container clusters get-credentials jenkins-cd

kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=$(gcloud config get-value account)

helm repo add stable https://charts.helm.sh/stable

helm repo update

helm install cd stable/jenkins

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/component=jenkins-master" -l "app.kubernetes.io/instance=cd" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward $POD_NAME 8080:8080 >> /dev/null &
printf $(kubectl get secret cd-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo

click web preview, go to jenkins

cd sample-app
kubectl create ns production
kubectl apply -f k8s/production -n production
kubectl apply -f k8s/canary -n production
kubectl apply -f k8s/services -n production

kubectl get svc
kubectl get service gceme-frontend -n production

After these commands do the jenkins part then do the rest commands -

Inside jenkins:

click on admin, credentials, global, adding some credentials(service metadata) click ok

 
copy the name 'sample-app'
click on new item, paste name , multibranch

add sources - git
paste git repository link from tip 3 change project id to yours
credentials change..

periodically if nit run interval 1 min.

then click apply

git init
git config credential.helper gcloud.sh
git remote add origin https://source.developers.google.com/p/$DEVSHELL_PROJECT_ID/r/sample-app
git config --global user.email "<user email>"
git config --global user.name "<user name>"
git add .
git commit -m "initial commit"
git push origin master

click on sample app (Shows master branch)


2nd Task -----

git checkout -b new-feature

After this command make the required changes!

given in second task.. (open editor in terminal open in inew window, come back and give open terminal) make changes..
after this run the below commands

git add Jenkinsfile html.go main.go
git commit -m "Version 2.0.0"
git push origin new-feature

3rd Task ----------
can paste every thing at once

curl http://localhost:8001/api/v1/namespaces/new-feature/services/gceme-frontend:80/proxy/version
kubectl get service gceme-frontend -n production  
git checkout -b canary
git push origin canary
export FRONTEND_SERVICE_IP=$(kubectl get -o \
jsonpath="{.status.loadBalancer.ingress[0].ip}" --namespace=production services gceme-frontend)
git checkout master
git push origin master

4rth Task -------

export FRONTEND_SERVICE_IP=$(kubectl get -o \
jsonpath="{.status.loadBalancer.ingress[0].ip}" --namespace=production services gceme-frontend)
while true; do curl http://$FRONTEND_SERVICE_IP/version; sleep 1; done

kubectl get service gceme-frontend -n production


copy below all at once

git merge canary
git push origin master
export FRONTEND_SERVICE_IP=$(kubectl get -o \
jsonpath="{.status.loadBalancer.ingress[0].ip}" --namespace=production services gceme-frontend)

DONE --------
